## Bug Pattern

The bug pattern is a race condition in the freeing of a shared data structure (reset_data) due to unsynchronized or multiple free paths. Specifically, if a timeout occurs in the scheduling function while another context (the worker) is still using the structure for completion notification, the structure may be freed concurrently or prematurely (use-after-free). The core problem is the failure to correctly coordinate when it is safe to free the reset_data structure, leading to scenarios where it is freed in one code path while another may still access it. This pattern occurs when the lifetime of a shared memory object is managed across multiple threads or execution contexts without proper synchronization (e.g., checking via completion_done() before freeing).