--- original_code.cpp+++ syntax_correct_refine_code.cpp@@ -185,6 +185,18 @@                              uint64_t &ConstVal, BinaryOperator::Opcode &OpOut) {
   if (!Cond) return false;
   Cond = Cond->IgnoreParenImpCasts();
+
+  // Recurse into logical-and to find the comparator among conjuncts.
+  if (const auto *BO0 = dyn_cast<BinaryOperator>(Cond)) {
+    if (BO0->getOpcode() == BO_LAnd) {
+      if (parseIVarVsConst(Ctx, BO0->getLHS(), IVar, ConstVal, OpOut))
+        return true;
+      if (parseIVarVsConst(Ctx, BO0->getRHS(), IVar, ConstVal, OpOut))
+        return true;
+      return false;
+    }
+  }
+
   const auto *BO = dyn_cast<BinaryOperator>(Cond);
   if (!BO) return false;

@@ -474,6 +486,23 @@   IsGEorGT = false;
   if (!Cond) return false;
   Cond = Cond->IgnoreParenImpCasts();
+
+  // Recurse into logical-and to find relevant comparator subexpressions.
+  if (const auto *B = dyn_cast<BinaryOperator>(Cond)) {
+    if (B->getOpcode() == BO_LAnd) {
+      bool L_LT = false, L_GE = false, R_LT = false, R_GE = false;
+      bool LFound = parseGuardCondition(Ctx, B->getLHS(), IVar, Cap, L_LT, L_GE);
+      bool RFound = parseGuardCondition(Ctx, B->getRHS(), IVar, Cap, R_LT, R_GE);
+      if (LFound || RFound) {
+        IsLTorLE = L_LT || R_LT;
+        IsGEorGT = L_GE || R_GE;
+        return true;
+      }
+      // Not found in either conjunct.
+      return false;
+    }
+  }
+
   const auto *BO = dyn_cast<BinaryOperator>(Cond);
   if (!BO) return false;

@@ -523,7 +552,7 @@   if (!ASE) return false;

   // Walk up the parents and look for an IfStmt where ASE is located within the 'then' branch
-  // and the condition is i < Cap (or i <= Cap).
+  // and the condition is i < Cap (or i <= Cap), possibly as part of a logical-and.
   const Stmt *Curr = ASE;
   while (true) {
     const Stmt *ParentS = nullptr;
