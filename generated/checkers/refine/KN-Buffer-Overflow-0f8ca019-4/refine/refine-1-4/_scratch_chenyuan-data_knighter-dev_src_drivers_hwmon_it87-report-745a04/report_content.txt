### Report Summary

File:| drivers/hwmon/it87.c
---|---
Warning:| line 931, column 30
Loop bound exceeds array capacity: index 'i' goes up to 5 but array size is 3

### Annotated Source Code


881   |  /*
882   |  * Cleared after each update, so reenable.  Value
883   |  * returned by this read will be previous value
884   |  */
885   | 			it87_write_value(data, IT87_REG_CONFIG,
886   | 				it87_read_value(data, IT87_REG_CONFIG) | 0x40);
887   | 		}
888   |  for (i = 0; i < NUM_VIN; i++) {
889   |  if (!(data->has_in & BIT(i)))
890   |  continue;
891   |
892   | 			data->in[i][0] =
893   | 				it87_read_value(data, IT87_REG_VIN[i]);
894   |
895   |  /* VBAT and AVCC don't have limit registers */
896   |  if (i >= NUM_VIN_LIMIT)
897   |  continue;
898   |
899   | 			data->in[i][1] =
900   | 				it87_read_value(data, IT87_REG_VIN_MIN(i));
901   | 			data->in[i][2] =
902   | 				it87_read_value(data, IT87_REG_VIN_MAX(i));
903   | 		}
904   |
905   |  for (i = 0; i < NUM_FAN; i++) {
906   |  /* Skip disabled fans */
907   |  if (!(data->has_fan & BIT(i)))
908   |  continue;
909   |
910   | 			data->fan[i][1] =
911   | 				it87_read_value(data, IT87_REG_FAN_MIN[i]);
912   | 			data->fan[i][0] = it87_read_value(data,
913   | 				       IT87_REG_FAN[i]);
914   |  /* Add high byte if in 16-bit mode */
915   |  if (has_16bit_fans(data)) {
916   | 				data->fan[i][0] |= it87_read_value(data,
917   | 						IT87_REG_FANX[i]) << 8;
918   | 				data->fan[i][1] |= it87_read_value(data,
919   | 						IT87_REG_FANX_MIN[i]) << 8;
920   | 			}
921   | 		}
922   |  for (i = 0; i < NUM_TEMP; i++) {
923   |  if (!(data->has_temp & BIT(i)))
924   |  continue;
925   | 			data->temp[i][0] =
926   | 				it87_read_value(data, IT87_REG_TEMP(i));
927   |
928   |  if (has_temp_offset(data) && i < NUM_TEMP_OFFSET)
929   | 				data->temp[i][3] =
930   | 				  it87_read_value(data,
931   |  IT87_REG_TEMP_OFFSET[i]);
    Loop bound exceeds array capacity: index 'i' goes up to 5 but array size is 3
932   |
933   |  if (i >= NUM_TEMP_LIMIT)
934   |  continue;
935   |
936   | 			data->temp[i][1] =
937   | 				it87_read_value(data, IT87_REG_TEMP_LOW(i));
938   | 			data->temp[i][2] =
939   | 				it87_read_value(data, IT87_REG_TEMP_HIGH(i));
940   | 		}
941   |
942   |  /* Newer chips don't have clock dividers */
943   |  if ((data->has_fan & 0x07) && !has_16bit_fans(data)) {
944   | 			i = it87_read_value(data, IT87_REG_FAN_DIV);
945   | 			data->fan_div[0] = i & 0x07;
946   | 			data->fan_div[1] = (i >> 3) & 0x07;
947   | 			data->fan_div[2] = (i & 0x40) ? 3 : 1;
948   | 		}
949   |
950   | 		data->alarms =
951   | 			it87_read_value(data, IT87_REG_ALARM1) |
952   | 			(it87_read_value(data, IT87_REG_ALARM2) << 8) |
953   | 			(it87_read_value(data, IT87_REG_ALARM3) << 16);
954   | 		data->beeps = it87_read_value(data, IT87_REG_BEEP_ENABLE);
955   |
956   | 		data->fan_main_ctrl = it87_read_value(data,
957   |  IT87_REG_FAN_MAIN_CTRL);
958   | 		data->fan_ctl = it87_read_value(data, IT87_REG_FAN_CTL);
959   |  for (i = 0; i < NUM_PWM; i++) {
960   |  if (!(data->has_pwm & BIT(i)))
961   |  continue;
