### Report Summary

File:| drivers/gpu/drm/amd/amdgpu/../pm/swsmu/smu13/smu_v13_0_6_ppt.c
---|---
Warning:| line 2214, column 5
Loop bound uses size of one array but also indexes a smaller array with the
same index; possible out-of-bounds (bound=8, array 'current_vclk0' size=4)

### Annotated Source Code


2164  |  struct smu_table_context *smu_table = &smu->smu_table;
2165  |  struct gpu_metrics_v1_5 *gpu_metrics =
2166  | 		(struct gpu_metrics_v1_5 *)smu_table->gpu_metrics_table;
2167  |  struct amdgpu_device *adev = smu->adev;
2168  |  int ret = 0, xcc_id, inst, i, j;
2169  | 	MetricsTableX_t *metrics_x;
2170  | 	MetricsTableA_t *metrics_a;
2171  | 	u16 link_width_level;
2172  |
2173  | 	metrics_x = kzalloc(max(sizeof(MetricsTableX_t), sizeof(MetricsTableA_t)), GFP_KERNEL);
2174  | 	ret = smu_v13_0_6_get_metrics_table(smu, metrics_x, true);
2175  |  if (ret) {
2176  | 		kfree(metrics_x);
2177  |  return ret;
2178  | 	}
2179  |
2180  | 	metrics_a = (MetricsTableA_t *)metrics_x;
2181  |
2182  | 	smu_cmn_init_soft_gpu_metrics(gpu_metrics, 1, 5);
2183  |
2184  | 	gpu_metrics->temperature_hotspot =
2185  |  SMUQ10_ROUND(GET_METRIC_FIELD(MaxSocketTemperature));
2186  |  /* Individual HBM stack temperature is not reported */
2187  | 	gpu_metrics->temperature_mem =
2188  |  SMUQ10_ROUND(GET_METRIC_FIELD(MaxHbmTemperature));
2189  |  /* Reports max temperature of all voltage rails */
2190  | 	gpu_metrics->temperature_vrsoc =
2191  |  SMUQ10_ROUND(GET_METRIC_FIELD(MaxVrTemperature));
2192  |
2193  | 	gpu_metrics->average_gfx_activity =
2194  |  SMUQ10_ROUND(GET_METRIC_FIELD(SocketGfxBusy));
2195  | 	gpu_metrics->average_umc_activity =
2196  |  SMUQ10_ROUND(GET_METRIC_FIELD(DramBandwidthUtilization));
2197  |
2198  | 	gpu_metrics->curr_socket_power =
2199  |  SMUQ10_ROUND(GET_METRIC_FIELD(SocketPower));
2200  |  /* Energy counter reported in 15.259uJ (2^-16) units */
2201  | 	gpu_metrics->energy_accumulator = GET_METRIC_FIELD(SocketEnergyAcc);
2202  |
2203  |  for (i = 0; i < MAX_GFX_CLKS; i++) {
2204  | 		xcc_id = GET_INST(GC, i);
2205  |  if (xcc_id >= 0)
2206  | 			gpu_metrics->current_gfxclk[i] =
2207  |  SMUQ10_ROUND(GET_METRIC_FIELD(GfxclkFrequency)[xcc_id]);
2208  |
2209  |  if (i < MAX_CLKS) {
2210  | 			gpu_metrics->current_socclk[i] =
2211  |  SMUQ10_ROUND(GET_METRIC_FIELD(SocclkFrequency)[i]);
2212  | 			inst = GET_INST(VCN, i);
2213  |  if (inst >= 0) {
2214  |  gpu_metrics->current_vclk0[i] =
    Loop bound uses size of one array but also indexes a smaller array with the same index; possible out-of-bounds (bound=8, array 'current_vclk0' size=4)
2215  |  SMUQ10_ROUND(GET_METRIC_FIELD(VclkFrequency)[inst]);
2216  | 				gpu_metrics->current_dclk0[i] =
2217  |  SMUQ10_ROUND(GET_METRIC_FIELD(DclkFrequency)[inst]);
2218  | 			}
2219  | 		}
2220  | 	}
2221  |
2222  | 	gpu_metrics->current_uclk = SMUQ10_ROUND(GET_METRIC_FIELD(UclkFrequency));
2223  |
2224  |  /* Throttle status is not reported through metrics now */
2225  | 	gpu_metrics->throttle_status = 0;
2226  |
2227  |  /* Clock Lock Status. Each bit corresponds to each GFXCLK instance */
2228  | 	gpu_metrics->gfxclk_lock_status = GET_METRIC_FIELD(GfxLockXCDMak) >> GET_INST(GC, 0);
2229  |
2230  |  if (!(adev->flags & AMD_IS_APU)) {
2231  |  if (!amdgpu_sriov_vf(adev)) {
2232  | 			link_width_level = smu_v13_0_6_get_current_pcie_link_width_level(smu);
2233  |  if (link_width_level > MAX_LINK_WIDTH)
2234  | 				link_width_level = 0;
2235  |
2236  | 			gpu_metrics->pcie_link_width =
2237  |  DECODE_LANE_WIDTH(link_width_level);
2238  | 			gpu_metrics->pcie_link_speed =
2239  | 				smu_v13_0_6_get_current_pcie_link_speed(smu);
2240  | 		}
2241  | 		gpu_metrics->pcie_bandwidth_acc =
2242  |  SMUQ10_ROUND(metrics_x->PcieBandwidthAcc[0]);
2243  | 		gpu_metrics->pcie_bandwidth_inst =
2244  |  SMUQ10_ROUND(metrics_x->PcieBandwidth[0]);
