--- original_code.cpp+++ syntax_correct_refine_code.cpp@@ -669,6 +669,38 @@       if (State->contains<OwnedRegionSet>(FreedReg) ||
           (Base && State->contains<OwnedRegionSet>(Base))) {
         return true;
+      }
+    }
+  }
+
+  // 2.5) Intrafunction allocator-assignment suppression:
+  // If this same param-field was assigned from an allocator in this function
+  // before the current free call, treat it as locally-owned and suppress.
+  if (FD && FreedME && BaseParam) {
+    const FieldDecl *CanonFD = dyn_cast<FieldDecl>(FreedME->getMemberDecl());
+    if (CanonFD) {
+      CanonFD = CanonFD->getCanonicalDecl();
+      auto ItAllocF = FuncFieldAllocAssignLocs.find(FD);
+      if (ItAllocF != FuncFieldAllocAssignLocs.end()) {
+        const auto &AllocMapField = ItAllocF->second;
+        auto ItAllocParmMap = AllocMapField.find(CanonFD);
+        if (ItAllocParmMap != AllocMapField.end()) {
+          auto ItLocs = ItAllocParmMap->second.find(BaseParam);
+          if (ItLocs != ItAllocParmMap->second.end()) {
+            const llvm::SmallVector<SourceLocation,4> &AllocLocs = ItLocs->second;
+            if (!AllocLocs.empty()) {
+              const SourceManager &SM = C.getSourceManager();
+              SourceLocation CurLoc = Call.getOriginExpr()
+                                          ? Call.getOriginExpr()->getBeginLoc()
+                                          : Call.getSourceRange().getBegin();
+              for (SourceLocation Lalloc : AllocLocs) {
+                if (SM.isBeforeInTranslationUnit(Lalloc, CurLoc)) {
+                  return true;
+                }
+              }
+            }
+          }
+        }
       }
     }
   }
@@ -802,7 +834,7 @@     if (!BaseParam)
       continue;

-    // Suppress known false positives (ownership known on path, non-error labels, or reset+realloc idiom).
+    // Suppress known false positives (ownership known on path, non-error labels, or reset+realloc/local-alloc idioms).
     if (isFalsePositive(ArgE, FreedME, BaseParam, Call, EnclosingLabel, C))
       continue;
