### Report Summary

File:| /scratch/chenyuan-data/linux-debug/sound/pci/korg1212/korg1212.c
---|---
Warning:| line 1627, column 6
Multiplication occurs in a narrower type and is widened after; possible
overflow before assignment/addition to wide type

### Annotated Source Code


1572  |  int rc;
1573  |
1574  |  K1212_DEBUG_PRINTK("K1212_DEBUG: snd_korg1212_trigger [%s] cmd=%d\n",
1575  |  stateName[korg1212->cardState], cmd);
1576  |
1577  | 	spin_lock(&korg1212->lock);
1578  |  switch (cmd) {
1579  |  case SNDRV_PCM_TRIGGER_START:
1580  | /*
1581  |  if (korg1212->running) {
1582  |  K1212_DEBUG_PRINTK_VERBOSE("K1212_DEBUG: snd_korg1212_trigger: Already running?\n");
1583  |  break;
1584  |  }
1585  | */
1586  |                         korg1212->running++;
1587  |                         rc = snd_korg1212_TriggerPlay(korg1212);
1588  |  break;
1589  |
1590  |  case SNDRV_PCM_TRIGGER_STOP:
1591  | /*
1592  |  if (!korg1212->running) {
1593  |  K1212_DEBUG_PRINTK_VERBOSE("K1212_DEBUG: snd_korg1212_trigger: Already stopped?\n");
1594  |  break;
1595  |  }
1596  | */
1597  |                         korg1212->running--;
1598  |                         rc = snd_korg1212_StopPlay(korg1212);
1599  |  break;
1600  |
1601  |  default:
1602  | 			rc = 1;
1603  |  break;
1604  |         }
1605  | 	spin_unlock(&korg1212->lock);
1606  |  return rc ? -EINVAL : 0;
1607  | }
1608  |
1609  | static snd_pcm_uframes_t snd_korg1212_playback_pointer(struct snd_pcm_substream *substream)
1610  | {
1611  |  struct snd_korg1212 *korg1212 = snd_pcm_substream_chip(substream);
1612  |         snd_pcm_uframes_t pos;
1613  |
1614  | 	pos = korg1212->currentBuffer * kPlayBufferFrames;
1615  |
1616  | 	K1212_DEBUG_PRINTK_VERBOSE("K1212_DEBUG: snd_korg1212_playback_pointer [%s] %ld\n",
1617  | 				   stateName[korg1212->cardState], pos);
1618  |
1619  |  return pos;
1620  | }
1621  |
1622  | static snd_pcm_uframes_t snd_korg1212_capture_pointer(struct snd_pcm_substream *substream)
1623  | {
1624  |  struct snd_korg1212 *korg1212 = snd_pcm_substream_chip(substream);
1625  |         snd_pcm_uframes_t pos;
1626  |
1627  |  pos = korg1212->currentBuffer * kPlayBufferFrames;
    Multiplication occurs in a narrower type and is widened after; possible overflow before assignment/addition to wide type
1628  |
1629  | 	K1212_DEBUG_PRINTK_VERBOSE("K1212_DEBUG: snd_korg1212_capture_pointer [%s] %ld\n",
1630  | 				   stateName[korg1212->cardState], pos);
1631  |
1632  |  return pos;
1633  | }
1634  |
1635  | static int snd_korg1212_playback_copy(struct snd_pcm_substream *substream,
1636  |  int channel, unsigned long pos,
1637  |  struct iov_iter *src, unsigned long count)
1638  | {
1639  |  return snd_korg1212_copy_from(substream, src, pos, count);
1640  | }
1641  |
1642  | static int snd_korg1212_playback_silence(struct snd_pcm_substream *substream,
1643  |  int channel, /* not used (interleaved data) */
1644  |  unsigned long pos,
1645  |  unsigned long count)
1646  | {
1647  |  struct snd_pcm_runtime *runtime = substream->runtime;
1648  |  struct snd_korg1212 *korg1212 = snd_pcm_substream_chip(substream);
1649  |
1650  |  return snd_korg1212_silence(korg1212, bytes_to_frames(runtime, pos),
1651  | 				    bytes_to_frames(runtime, count),
1652  | 				    0, korg1212->channels * 2);
1653  | }
1654  |
1655  | static int snd_korg1212_capture_copy(struct snd_pcm_substream *substream,
1656  |  int channel, unsigned long pos,
1657  |  struct iov_iter *dst, unsigned long count)
