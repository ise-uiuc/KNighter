rules:
  - id: double-free-devm-allocation
    patterns:
      - pattern-inside: |
          $FUNC(...) {
            ...
          }
      - pattern-either:
          - pattern: |
              $PTR = devm_kmalloc(...);
              ...
              kfree($PTR);
          - pattern: |
              $PTR = devm_kzalloc(...);
              ...
              kfree($PTR);
          - pattern: |
              $PTR = devm_kcalloc(...);
              ...
              kfree($PTR);
          - pattern: |
              $PTR = devm_kmalloc(...);
              ...
              kvfree($PTR);
          - pattern: |
              $PTR = devm_kzalloc(...);
              ...
              kvfree($PTR);
          - pattern: |
              $PTR = devm_kcalloc(...);
              ...
              kvfree($PTR);
          - pattern: |
              $PTR = devm_kcalloc(...);
              ...
              pinctrl_utils_free_map(..., $PTR, ...);
    pattern-not: |
      $PTR = devm_kcalloc(...);
      ...
      $PTR = kcalloc(...);
      ...
      kfree($PTR);
    languages: ["c"]
    message: |
      Double-free vulnerability detected: Memory allocated with devm_* functions is automatically 
      managed by the device framework and should not be manually freed. Manual calls to kfree(), 
      kvfree(), or pinctrl_utils_free_map() on devm_* allocated memory can cause double-free errors.
      
      Fix: Use regular allocation functions (kcalloc, kmalloc, kzalloc) instead of devm_* functions 
      when manual memory management is required, or remove the manual free calls if automatic 
      cleanup is desired.
    severity: ERROR
    metadata:
      category: security
      cwe: "CWE-415"
      owasp: "A06:2021-Vulnerable and Outdated Components"
      confidence: HIGH
      references:
        - "https://cwe.mitre.org/data/definitions/415.html"
        - "https://www.kernel.org/doc/html/latest/driver-api/device_resource_management.html"
